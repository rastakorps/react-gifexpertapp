{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"6MAgCeA,EA7BY,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,OAOd,2BACIO,KAAM,OACNC,MAAUT,EACVU,SAnBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,YCKjBG,EAVY,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAChC,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,2BAAKA,K,uBCLJK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACTN,EADS,iDACwCO,UAAWF,GADnD,+DAEIG,MAAMR,GAFV,cAETS,EAFS,gBAGQA,EAAKC,OAHb,uBAGPC,EAHO,EAGPA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAT3B,kBAaRY,GAbQ,4CAAH,sDCmDLM,EAjDC,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECDN,SAAEA,GAAe,IAAD,EAEdpB,mBAAS,CAC/B0B,KAAM,GACNQ,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA0BxC,OAnBAC,qBAAW,WAEPlB,EAASC,GACJkB,MAAM,SAAAC,GAEHC,YAAY,WAERJ,EAAS,CACLV,KAAMa,EACNL,SAAS,MAGd,UAGZ,CAAEd,IAIEe,EDN0BM,CAAcrB,GAAlCW,EAnBiB,EAmBtBL,KAAaQ,EAnBS,EAmBTA,QAErB,OAEI,oCACI,wBAAIlB,UAAU,qCAAsCI,GAElDc,GAAW,uBAAGlB,UAAU,sDAAb,WACb,yBAAKA,UAAU,aAGHe,EAAOH,KAAK,SAAAC,GACZ,OAAQ,kBAAC,EAAD,eACIa,IAAOb,EAAIC,IACPD,UEAzBc,EAjCM,WAAM,MAIa3C,mBAAS,CAAC,gBAJvB,mBAIhBQ,EAJgB,KAIJT,EAJI,KAWvB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAkBA,IAC/B,6BAGA,4BAEQS,EAAWoB,KAAK,SAAAR,GAAQ,OACxB,kBAAC,EAAD,CACIsB,IAAQtB,EACRA,SAAaA,UCtBrCwB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.fac5546e.chunk.js","sourcesContent":["import React,{useState} from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n    \n    const [inputValue, setInputValue] = useState('');\n    \n    const handleInputChange = (e) => {\n        setInputValue( e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(inputValue.trim().length > 2){\n            setCategories(categories => [inputValue, ...categories]);\n            setInputValue('');\n        }\n        \n    }\n\n    return (\n        <form onSubmit = { handleSubmit }>\n            <input\n                type =\"text\"\n                value = { inputValue }\n                onChange = { handleInputChange }\n            />\n        </form>\n    )\n}\n\nexport default AddCategory;\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","import React from 'react';\n\n\nexport const GifGridItem = ({title, url}) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url } alt={ title }/>\n            <p>{ title }</p>\n        </div>\n    )\n}\n\n\nexport default GifGridItem;","\n\nexport const getGifs = async( category ) => {\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=3KuEiVpQrsFecIXuPXT33McKzQf3uPnu`;\n        const resp = await fetch(url);\n        const { data } = await resp.json();\n\n        const gifs = data.map( img => {\n            return {\n                id: img.id,\n                title: img.title,\n                url: img.images?.downsized_medium.url\n            }\n        });\n    \n        return gifs;\n  \n}","import React from 'react'\nimport GifGridItem from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nconst GifGrid = ({ category }) => {\n\n    /*  \n\n    Debajo del H3\n    \n    <div className=\"card-grid\">\n                \n                    {\n                        images.map( img => {\n                        return  <GifGridItem \n                                    key = {img.id}\n                                    {...img}\n                                />\n                        })\n                    }\n            </div>\n    */\n\n    const { data:images, loading } = useFetchGifs( category );\n\n    return (\n\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n\n            { loading && <p className=\"animate__animated animate__flash animate__repeat-2\">Loading</p> }\n            <div className=\"card-grid\">\n                \n                    {\n                        images.map( img => {\n                        return  <GifGridItem \n                                    key = {img.id}\n                                    {...img}\n                                />\n                        })\n                    }\n            </div>\n            \n            \n            \n        </>\n    )\n}\n\nGifGrid.propTypes = {\n\n}\n\nexport default GifGrid;\n","import { useState, useEffect} from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n        \n        getGifs( category )\n            .then( imgs => {\n                \n                setTimeout( () => {\n                    \n                    setState({\n                        data: imgs,\n                        loading: false\n                    });\n                    \n                }, 3000);\n            })\n        \n    }, [ category ]);\n\n    \n\n    return state;\n}","import React, {useState} from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    //const categories = ['One punch', 'Samurai X', 'Dragon Ball'];\n\n    const [categories, setCategories] = useState(['Dragon Ball']);\n/*\n    const handleAdd = () => {\n        setCategories([...categories, 'Avatar']);\n    }\n*/\n\n    return(\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories = { setCategories }/>\n            <hr />\n\n            \n            <ol>\n                {\n                    categories.map( category => (\n                    <GifGrid \n                        key = { category }\n                        category = { category }\n                    />\n  \n                    ))\n                }\n            </ol>\n        </>\n    );\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}